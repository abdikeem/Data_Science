# -*- coding: utf-8 -*-
"""Python Quiz

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qpCDSRbAdfx20titXrtkB2LuGF5j2lqI

# Matplotlib
### This is the most popular python plotting library.It is a low-level library with a Matlab like interface which offers lots of freedom at the cost of having to write more code.
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

from google.colab import files
  uploaded = files.upload()

x = pd.read_csv("Standard Metropolitan Areas Data - train_data - data.csv") #Let's load the data

x.head() #Check what all varibles/ fields are there in the dataset

"""### Scatter Plot Using Matplotlib"""

plt.scatter(x.crime_rate, x.percent_city)
plt.title("Plot of crime rate vs percent city")
plt.xlabel("Percent city")
plt.ylabel("Crime rate")
plt.show()

"""### Line chart"""

plt.plot(x.work_force, x.income, 'r--o', label = "Work force")
plt.xlabel("Work Force")
plt.ylabel("Income")
plt.legend()
plt.show()

plt.plot(x.work_force, x.income, 'r--o', label = "Work force")
plt.plot(x.physicians, x.income, 'g--o', label = "Graduate")

#Adding a legent
plt.legend()

plt.show()

"""### Subplot method"""

plt.subplot(2,1,1) # row, colum, index respectively
plt.plot(x.work_force, x.income, "go")
plt.title("Income vs Work Force")

plt.subplot(2,1,2)
plt.plot(x.hospital_beds, x.income, "r--o")
plt.title("Income vs Hospital beds")

plt.suptitle("Sub plots") # Add a centered title to the figure
plt.show()

"""### Histogram"""

plt.title("Histogram")
plt.xlabel("Percentage of senior citizens")
plt.ylabel("Frequency")

plt.hist(x.percent_senior)
plt.show()

"""## Seaborn"""

import seaborn as sns

#load iris data
iris = sns.load_dataset("iris")
iris.sample(10)

"""### Swarm Plot using seaborn"""

sns.swarmplot(x="species", y="petal_length", data=iris)
plt.show()

"""### Heat map"""

#Correlation matrix completely ignores any non-numeric column.
sns.heatmap(iris.corr(), annot=True)
plt.show()

"""### Bar chart"""

divisions = ["A", "B", "C", "D", "E"]
divisions_avg = [70, 82, 54, 65, 76]

plt.bar(x.region, x.crime_rate, color="green")

plt.title("region vs Crime rate")
plt.xlabel("Divisions")
plt.ylabel("Marks")
plt.show()

divisions = ["A", "B", "C", "D", "E"]
divisions_avg = [70, 82, 54, 65, 76]
boys_avg = [17, 28, 45, 56, 67]

# Using the Numpy arange function to generate values for index between 0-4
#Here stop is 5, start is 0 and step is 1
index = np.arange(5)
width = 0.30

plt.bar(index, divisions_avg, width, color="green", label="Division marks")
plt.bar(index+width, boys_avg, width, color="b", label= "Boys marks")

plt.legend()

plt.title("Bar Graph")
plt.xlabel("Divisions")
plt.ylabel("Marks")
plt.show()

"""### Pie Chart"""

firms = ["firm A", "firm B", "firm C", "firm D", "firm E"]
market_share = [20,25,15,10,10]

#Explode the pie chart to emphasize a certain part or some parts(Firm B in this case)
# It is useful because it makes the highlighted porton more visible
Explode = [0,0.1,0,0,0]

plt.pie(market_share, explode=Explode, labels=firms, autopct='%1.1f%%', startangle=45)

plt.axis('equal')

plt.legend(title ="List of firm")
plt.show()